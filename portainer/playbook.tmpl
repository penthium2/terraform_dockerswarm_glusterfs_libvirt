---
- hosts : all
  become: true
  tasks:
    - name: Add_directory
      file:
        dest: "/srv/docker_swarm/configuration/portainer"
        state: directory
    - name: Add_directory-compose
      file:
        dest: "/srv/docker_swarm/configuration/compose/portainer"
        state: directory
#      ignore_errors: true
      run_once: true
    - name: Install_python3-docker
      dnf:
        name: python3-docker
        state: present
    - name: Install_python3-jsondiff
      dnf:
        name: python3-jsondiff
        state: present
    - name: Firewall interface
      shell:
        cmd: "firewall-cmd --add-port=9443/tcp --permanent"
    - name: Firewall agent
      shell:
        cmd: "firewall-cmd --add-port=9001/tcp --permanent"
    - name: Firewall agent2
      shell:
        cmd: "firewall-cmd --add-port=9000/tcp --permanent"
    - name: Reload_firewall
      shell:
        cmd: "firewall-cmd --reload"
    - name: LOL passwor
      shell:
        cmd: "echo -n ${admin_password} > /srv/docker_swarm/configuration/lol_password"


############################## docker networks:
#    - name: Create agent network
#      community.docker.docker_network:
#        name: agent_network
#        driver: overlay
#        attachable: true
#      ignore_errors: true
#      run_once: true  
    - name: Create agent traefik
      community.docker.docker_network:
        name: traefik
        driver: overlay
        attachable: true
      ignore_errors: true
      run_once: true
############################## PORTAINER CE
    - name: Stack_portainer
      community.docker.docker_stack:
        state: present
        name: portainer
        compose:
          #- /srv/docker_swarm/configuration/compose/portainer/docker-compose.yml
          - version: '3.2'
            services:
              agent:
                image: portainer/agent
                volumes:
                  - /var/run/docker.sock:/var/run/docker.sock
                  - /var/lib/docker/volumes:/var/lib/docker/volumes
                  
                networks:
                  - agent_network
                deploy:
                  mode: global
                  placement:
                    constraints: [node.platform.os == linux]

              portainer:
                image: portainer/portainer-ce
                command: -H tcp://tasks.agent:9001 --tlsskipverify  --admin-password-file /tmp/portainer_password
                #Mdp : iopiopiopiop
                ports:
                  - "9443:9443"
                  - "9000:9000"
                  - "8000:8000"
                volumes:
                  - /srv/docker_swarm/configuration/portainer/:/data
                  - /srv/docker_swarm/configuration/lol_password:/tmp/portainer_password
                networks:
                  - agent_network
                  - traefik
                deploy:
                  mode: replicated
                  replicas: 1
                  placement:
                    constraints: [node.role == manager]
            networks:
              agent_network:
                driver: overlay
                attachable: true
              traefik:
                driver: overlay
                external: true
      run_once: true
